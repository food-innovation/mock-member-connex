{
  "name": "@fial/mock-member-connex",
  "version": "1.1.3",
  "description": "A mock server that mimics the CyberGlue MemberConnex system",
  "main": "index.js",
  "engines": {
    "node": "10.4.1",
    "npm": "6.1.0"
  },
  "scripts": {
    "eslint-check": "eslint --print-config .eslintrc.js | eslint-config-prettier-check",
    "lint": "eslint .",
    "precommit": "lint-staged",
    "prettier": "prettier --single-quote --no-semi --write '**/*.{js,json}'",
    "seed": "NODE_PATH=. node tasks/seed",
    "start": "NODE_PATH=. node index.js",
    "backend": "docker-compose up -d db redis",
    "start:production": "NODE_ENV=production node dist/index",
    "test": "npm run test:unit",
    "test:all": "npm run test:unit; npm run test:integration",
    "test:integration": "npm run test:server; npm run test:db",
    "test:server": "find ./test/server -name '*_spec.js' | NODE_PATH=. NODE_ENV=test xargs mocha --require ./test/server/test_helper.js --bail",
    "test:db": "find ./test/db -name '*_spec.js' | NODE_PATH=. NODE_ENV=test xargs mocha --require ./test/db/test_helper.js --bail",
    "test:unit": "find ./test/unit -name '*_spec.js' | NODE_PATH=. NODE_ENV=test xargs mocha --require ./test/unit/test_helper.js",
    "test:unit:cov": "find ./test/unit -name '*_spec.js' | NODE_PATH=. NODE_ENV=test xargs nyc mocha --require ./test/unit/test_helper.js",
    "test:all:cov": "nyc npm run test:all"
  },
  "keywords": [
    "MemberConnex",
    "mock",
    "oauth"
  ],
  "author": "Dave Sag <david.sag@industrie.co>",
  "license": "MIT",
  "lint-staged": {
    "**/*.{js,json}": [
      "prettier --single-quote --no-semi --write",
      "git add"
    ]
  },
  "nyc": {
    "check-coverage": true,
    "per-file": true,
    "lines": 100,
    "statements": 100,
    "functions": 100,
    "branches": 100,
    "include": [
      "src/**/*.js"
    ],
    "exclude": [
      "src/index.js",
      "src/utils/config.js",
      "src/scopedData/index.js",
      "src/scopedData/images/index.js"
    ],
    "reporter": [
      "lcov",
      "text"
    ],
    "all": true,
    "cache": true
  },
  "devDependencies": {
    "ajv": "^6.5.1",
    "chai": "^4.1.2",
    "chai-as-promised": "^7.1.1",
    "chai-string": "^1.4.0",
    "eslint": "^4.19.1",
    "eslint-config-prettier": "^2.8.0",
    "eslint-config-standard": "^11.0.0",
    "eslint-plugin-import": "^2.12.0",
    "eslint-plugin-mocha": "^5.0.0",
    "eslint-plugin-node": "^6.0.1",
    "eslint-plugin-prettier": "^2.3.1",
    "eslint-plugin-promise": "^3.8.0",
    "eslint-plugin-standard": "^3.1.0",
    "faker": "^4.1.0",
    "husky": "^1.0.1",
    "lint-staged": "^7.2.0",
    "mocha": "^5.2.0",
    "nyc": "^12.0.2",
    "prettier": "^1.13.5",
    "proxyquire": "^2.0.0",
    "sinon": "^6.0.0",
    "sinon-chai": "^3.2.0",
    "supertest": "^3.1.0"
  },
  "repository": "https://github.com/food-innovation/mock-member-connex.git",
  "bugs": {
    "url": "https://github.com/food-innovation/mock-member-connex/issues"
  },
  "homepage": "https://github.com/food-innovation/mock-member-connex#readme",
  "dependencies": {
    "axios": "^0.18.0",
    "body-parser": "^1.18.3",
    "cors": "^2.8.4",
    "express": "^4.16.2",
    "uuid": "^3.2.1"
  }
}
